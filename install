#!/usr/bin/env perl
# -*- mode: cperl -*-

# install --- dotfiles installer
# author: Seong Yong-ju <sei40kr@gmail.com>

use utf8;
use strict;
use warnings;
use File::Basename 'basename', 'dirname';
use Getopt::Long;
use Pod::Usage;

binmode STDOUT, ':encoding(UTF-8)';
binmode STDERR, ':encoding(UTF-8)';

$ENV{XDG_CONFIG_HOME} = "${ENV{HOME}}/.config"
  unless ( defined( $ENV{XDG_CONFIG_HOME} ) );
$ENV{XDG_DATA_HOME} = "${ENV{HOME}}/.local/share"
  unless ( defined( $ENV{XDG_DATA_HOME} ) );

$ENV{BREW_PREFIX} = '/usr/local' unless ( defined( $ENV{BREW_PREFIX} ) );
$ENV{CARGO_HOME} = "${ENV{HOME}}/.cargo" unless ( defined( $ENV{CARGO_HOME} ) );
$ENV{GOENV_ROOT} = "${ENV{HOME}}/.goenv" unless ( defined( $ENV{GOENV_ROOT} ) );
$ENV{NVM_DIR}    = "${ENV{HOME}}/.nvm"   unless ( defined( $ENV{NVM_DIR} ) );
$ENV{PERLBREW_ROOT} = "${ENV{HOME}}/perl5/perlbrew"
  unless ( defined( $ENV{PERLBREW_ROOT} ) );
$ENV{PYENV_ROOT} = "${ENV{HOME}}/.pyenv" unless ( defined( $ENV{PYENV_ROOT} ) );
$ENV{RBENV_ROOT} = "${ENV{HOME}}/.rbenv" unless ( defined( $ENV{RBENV_ROOT} ) );

my $basepath = dirname(__FILE__);

require $basepath . "/utility.pl";

GetOptions(
    'dry-run' => sub { set_dry_run(1); },
    update    => sub { set_update(1); },
    verbose   => sub { set_verbose(1); }
) or die 'Error in command-line arguments.';

my %all_modules_by_name = map { ( basename( $_, ".pl" ), $_ ) }
  glob "'${basepath}/modules/+*/*.pl' '${basepath}/modules/*.pl'";

my @modules_to_install = @ARGV;
@modules_to_install = keys %all_modules_by_name
  if ( scalar(@modules_to_install) eq 0 );

require $_ foreach glob "'${basepath}/facades/*.pl'";

foreach my $module (@modules_to_install) {
    my $module_path = $all_modules_by_name{$module};

    unless ($module_path) {
        print STDERR "Error: A module ${module} does not exist.\n";
    }

    require $module_path;
}

&run_reducers;
